#include <iostream>
#include <cstdlib>
#include <cstring>

using namespace std;

int main()
{
	int n = 0;
	cin >> n;
	int M = 1 << n;
	int** dp = (int**) malloc(sizeof(int*) * n);
	for (int i = 0; i < n; i++) {
		dp[i] = (int*) malloc(sizeof(int) * M);
		memset(dp[i], 0x3f, sizeof(int) * M);
	}
	int** weight = (int**) malloc(sizeof(int*) * n);
	for (int i = 0; i < n; i++) {
		weight[i] = (int*) malloc(sizeof(int) * n);
		memset(weight[i], 0, sizeof(int)* n);
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> weight[i][j];
		}
	}
	dp[0][1] = 0;
	for (int m = 1; m < M; m++) 
		for (int i = 0; i < n; i++)
			if ((m >> i) & 1) {
				for (int j = 0; j < n; j++) if (((m ^ (1 << i)) >> j) & 1) {
					dp[i][m] = min(dp[i][m], dp[j][m ^ (1 << i)] + weight[j][i]);
				}
			}

	cout << dp[n - 1][M - 1];
	return 0;
}
